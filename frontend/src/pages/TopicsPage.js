import React from 'react';

function TopicsPage() {
    return(
        <>
            <h2>Web Dev Concepts</h2>
            <nav class="local">
                <a href="#servers">Web Servers</a>
                <a href="#frontend">Frontend Design</a>
                <a href="#optimization">Optimizing Images</a>
                <a href="#favicons">Favicons</a>
                <a href="#javascript">JavaScript</a>
            </nav>
            <article id="servers">
                <h3>Web Servers</h3>
                <p>The index file, or index.html, is the designated homepage on the web server. Generally, when a GET request for "/" occurs, index.html is the file in the root directory that is returned. This is because, in most cases, index.html is the file to which "/" is mapped. Oregon State University's Apache web server likewise uses the default name index.html. Other servers, however, might use different paths for homepages. For example, Microsoft's .NET platform uses default.html. In other cases, index.js or index.php might be targeted as the homepage.</p>
                <p>A user will observe several items when using the inspection function on this page. Under the General header of the Network tab, the user will see the <strong>URL</strong> that was requested, the <strong>request method</strong>, the <strong>status code</strong>, the <strong>remote address</strong> or <strong>IP</strong> if viewed from the web server, and <strong>policy</strong>. In this case, the request method will show "GET," and ideally, the <strong>status code</strong> will show "200 OK." Additional information can be found under other tabs, including, if viewing  the file from a web server, <strong>cache controls</strong>, the <strong>host</strong>, and the <strong>user-agent</strong> or <strong>browser</strong>. A user will see different information depending upon whether the file is viewed from the local computer or from the web server. When viewed locally, the "Request" URL under the General header will be the location of the file on the local computer. Here, inspecting the Request URL shows that the file is located on the computer's C drive in the user's "Documents" folder. On the other hand, when viewing the file from the web server, a user is able to see "https://web.engr.oregonstate.edu/~sonnenfr/a1-sonnenfr/", which is the location of the index.html file on the server. Additional information a user is able to see when viewing the file on the web server includes the cache controls, the host (web.engr.oregonstate.edu), and the user agent.</p>
                <p>A user inspecting the favicon.ico, main.css, and main.js files will see that the favicon.ico file has a status of 200, while the other files do not. Status codes in the 200-299 category establish that a request was successfully processed by the server. Because the favicon.ico file had a 200 status code, the user will know that the request for the file was successful and that the response body had the necessary information. By contrast, the main.css and main.js files show a 404 error. Status codes in the 400-499 category represent client errors or situations in which a request was not valid such that the server program could not fulfill it. The 404 code was returned because the resource that was requested was not found on the server.</p>
                <p>The <strong>URL</strong>, or <strong>uniform resource locator</strong>, of the file on the web server, https://web.engr.oregonstate.edu/~sonnenfr/a1-sonnenfr/, is composed of several parts. The portion that reads "https" is the <strong>scheme</strong>, which identifies the protocol the web client or browser is required to use in order to request the desired resource. The fact that the scheme shows https instead of http indicates that the data being sent between the client and the server are encrypted. Next, "oregonstate.edu" is the <strong>server</strong> or <strong>domain name</strong>. This describes the name of the machine where the requested resource is hosted and where the request will go. Importantly, the domain name is preceded by "web.engr.", which are <strong>subdomains</strong> that refer to particular subsections of the domain or server. Under different circumstances, a user might next see a number indicating which <strong>port</strong> is being used, but because https uses the standard port number 443, which is reserved for https servers, the port number is omitted from the URL. Finally, "~sonnenfr/a1-sonnenfr/" represents the <strong>path</strong> to the resource located on the server. In other words, this indicates the location of the file based upon the hierarchical path of folders and directories on the server. Importantly, the "/" at the end of the file is mapped to the resource at the path "/index.html" or the designated homepage on the web server. Ultimately, this is the file or resource returned when a GET request for "/" is made by a user.</p>
            </article>
            <article id="frontend">
                <h3>Frontend Design</h3>
                <p><strong>Frontend design</strong> entails those matters that make up the user experience of a web page. Particularly, frontend design encompasses the web page's visual design, the graphical user-interface, and how a user interacts with the web page. As for the page's visual design, these include such items as the page's color scheme, font style of any text, pictures or icons, and means of navigating to other sections or pages.
                </p>
                <p>Creating a website with a pleasing user experience can be accomplished by adhering to the five "E"s of usability.</p>
                <dl>
                    <dt><strong>Effective</strong></dt>
                    <dd>A website should be effective at allowing users to achieve their goal, i.e., correctly providing the information the user seeks.</dd>
                    <dt><strong>Efficient</strong></dt>
                    <dd>A website should help users complete the task they want to achieve in the fewest steps possible so that the results users want are returned quickly.</dd>
                    <dt><strong>Easy To Navigate</strong></dt>
                    <dd>A website should allow even new users to easily discern how to find their goal through a search or by clicking through a page. Additionally, the navigation scheme should be one that users will remember the next time they use the website.</dd>
                    <dt><strong>Error-Free</strong></dt>
                    <dd>A website should not have any issues that could make the website inaccessible or unavailable to a user.</dd>
                    <dt><strong>Enjoyable</strong> or <strong>Engaging</strong></dt>
                    <dd>A website should align with the intended users' expectations for what it will contain and how it should be designed.</dd>
                </dl>
                <p><strong>Page-layout tags</strong> separate the flow of content on a page and allow machines like search engine robots and screen readers to discern how the contents of the page are organized. The <strong>header</strong> element includes general introductory or identification material such as a banner or masthead that might contain the name of the website, the author, and a logo or slogan. The <strong>nav</strong> element is a block that contains links that will take the user to other places within the same document or to other pages. The <strong>main</strong> element is the principal block that contains the central content of a page. The <strong>section</strong> element groups related content into a generic collection that does not necessarily stand alone. Typically, each section includes a headline describing the contents of the section. The <strong>article</strong> element, which is generally contained in a section element, denotes a specific composition about a particular topic and is usually accompanied by a second-level headline. The <strong>aside</strong> element typically floats next to an article and uses a different style to relay content that is related to that article. Like the aside element, the <strong>figure</strong> element relays content related to the article, but the content is typically an image or video along with the <strong>figcaption</strong> element for that media. When a page includes an extended quotation, the <strong>blockquote</strong> element is used to make the text look different from the paragraph to help it stand out. The <strong>footer</strong> element holds contact information, legal and copyright information, or links to other pages. Finally, the <strong>div</strong> element works as a catch-all divider for content when no other element seems to be appropriate, and it is also reserves space for dynamic content.
                </p> 
                <ol>
                    <li>To link to external content, an <strong>anchor</strong> element links to a URL that is not contained in the current website. Within the anchor element, the href attribute specifies the link that a user will be taken to if they click on the particular text, which is also included in the anchor element and describes the link.</li>
                    <li>To link to internal content, an anchor element uses the value of a tag's ID attribute along with a hashtag as the content specified by the included href attribute. When a user clicks on the descriptive text, the user will be taken to the specified reference in that page. </li>
                    <li>To move from page-to-page, anchors can be used as buttons in a global navigation block. To do so, a navigation block will contain multiple anchor elements. Within the anchor elements, the href attribute will refer to the specific pages that descriptive text--also in the anchor element--will describe. When a user clicks on the descriptive text, the user will be taken to the specified page.</li>
                </ol>
            </article>
            <article id="optimization">
                <h3>Optimizing Images</h3>
                <p><strong>Images</strong> that are optimized for the web meet six main specifications. First, the file name of an image should be <strong>descriptive</strong> but concise. The name should include details on who or what is in the image and when and where it was taken. This improves search engine optimization by allowing search engine bots to more effectively categorize the image, so users can find it. Next, the image should have a <strong>small file size</strong>. High resolution images should only be used for high resolution devices. In other cases, compressing the file size allows for faster loading times on the page. The image should also meet the <strong>exact dimensions</strong> of the space of the web page. Cropping and reducing the size of the image to appropriately fit in a particularly-sized space on the page will ensure that the image does not load slowly. Next, multiple image sizes should be provided to account for not only high resolution monitors but also monitors with lower or <strong>reduced resolution</strong>. This ensures that monitors with lower resolution can properly render the image. Additionally, the image should use the proper <strong>color mode</strong>. Files in the .PNG, .JPG, .SVG, and .WebP formats should use RGB, which allows for millions of colors by adjusting values. On the other hand, .GIF files should use indexed color. Finally, the image should be in the <strong>correct file format</strong>. Online photos are typically in the .JPG format, which compresses to a small file size and remains rectangular. SVG files retain crisp text for interactive or animated images. GIF files are generally used for line-art graphics, and short photo or video sequences can be saved as animated .GIFs. PNG files are best used for biomorphic shapes and line art, as well as for solid colors. WebP files are usually for photographic images, and they compress to small file sizes and remain rectangular. </p>
            </article>
            <article id="favicons">
                <h3>Favicons</h3>
                <p>Favicons are symbols or logos that identify a site in places like the browser tab, on a large display, in a search engine list, or on devices such as a smartwatch or phone. In order to ensure that they are displayed in the correct size and file type depending on the device, the symbol or logo is saved in various file formats for different browsers and devices. The browser will then obtain the files, save the appropriate icon, and anchor it to a particular area such as a bookmark, a favorites list, a device screen, or search engine results list.</p>
            </article>
            <article id="javascript">
                <h3>JavaScript</h3>
                <p>There are six main <strong>JavaScript data types</strong>. A JavaScript value can be a number, a Boolean value of true or false, a string, a symbol, the special values undefined or null, or an object. A JavaScript <strong>object</strong> is a set of names and values that are paired, constituting the "properties" of the object. Properties of the object can be created, read, updated, or deleted. JavaScript <strong>arrays</strong> are similar to objects, but the property names are the strings "0," "1," "2," and so on. These properties--or elements--can be accessed via a bracketed integer, i.e., [0], or string, i.e., ['0']. <strong>JSON</strong>, or JavaScript Object Notation, allows for the exchange of data between applications. With JSON, we can map an object to a string in JSON format and create an object from a string in JSON format. <strong>Conditionals</strong> are ways to code decisions. For example, we can have a portion of code execute only if a provided expression--the conditional--evaluates to true. <strong>Loops</strong> allow a program to do things like iterate over elements of an iterable value or execute parts of code a given number of times or while a particular expression meets certain criteria, i.e., evaluates as true. <strong>Object-oriented programming</strong> is a means of creating objects that are instances of a source, i.e., a class, and that contain properties of that class that themselves can be manipulated. <strong>Functional programming</strong> is a means of applying functions to other functions or composing functions with other functions. For example, functions can be defined to return other functions. Likewise, functions can be passed as arguments to other functions. Additionally, functions can be assigned to variables.</p>

            </article>
        </>
    );
}
export default TopicsPage;